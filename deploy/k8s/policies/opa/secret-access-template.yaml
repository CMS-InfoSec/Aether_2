apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sallowedsecretaccess
spec:
  crd:
    spec:
      names:
        kind: K8sAllowedSecretAccess
      validation:
        openAPIV3Schema:
          properties:
            allowedNamespaces:
              type: array
              items:
                type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sallowedsecretaccess

        violation[{"msg": msg}] {
          input.review.kind.kind == "RoleBinding"
          subject := input.review.object.subjects[_]
          subject.kind == "ServiceAccount"
          not subject.namespace
          msg := "ServiceAccount subjects in RoleBindings must specify a namespace"
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "RoleBinding"
          subject := input.review.object.subjects[_]
          subject.kind == "ServiceAccount"
          sa_ns := subject.namespace
          allowed := {ns | ns := input.parameters.allowedNamespaces[_]}
          not allowed[sa_ns]
          msg := sprintf("ServiceAccount %s is not allowed secret access", [subject.name])
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "RoleBinding"
          roleRef := input.review.object.roleRef
          roleRef.kind == "ClusterRole"
          roleRef.name == "secret-reader"
          not input.review.object.metadata.namespace
          msg := "Cluster-wide secret-reader role bindings must be namespace-scoped"
        }
