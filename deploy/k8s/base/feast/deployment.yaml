apiVersion: apps/v1
kind: Deployment
metadata:
  name: feast-online
  labels:
    app.kubernetes.io/name: feast-online
    app.kubernetes.io/component: feature-store
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: feast-online
  template:
    metadata:
      labels:
        app.kubernetes.io/name: feast-online
    spec:
      initContainers:
        - name: render-feast-config
          image: python:3.11-slim
          command:
            - python
            - -c
            - |
              import os
              from pathlib import Path

              template = Path("/templates/feature_store.yaml").read_text()
              password = os.environ["FEAST_OFFLINE_PASSWORD"]
              rendered = template.replace("${FEAST_OFFLINE_PASSWORD}", password)
              output = Path("/etc/feast/feature_store.yaml")
              output.parent.mkdir(parents=True, exist_ok=True)
              output.write_text(rendered)
          env:
            - name: FEAST_OFFLINE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: feast-offline-store
                  key: password
          volumeMounts:
            - name: feast-config-template
              mountPath: /templates
              readOnly: true
            - name: feast-rendered-config
              mountPath: /etc/feast
      containers:
        - name: feast
          image: feastdev/feast-serving:1.0.0
          ports:
            - containerPort: 6566
              name: grpc
            - containerPort: 6567
              name: http
          env:
            - name: FEAST_REDIS_HOST
              value: redis
            - name: FEAST_REDIS_PORT
              value: "6379"
            - name: FEAST_REGISTRY_PATH
              value: /data/registry.db
            - name: FEAST_OFFLINE_USER
              valueFrom:
                secretKeyRef:
                  name: feast-offline-store
                  key: username
            - name: FEAST_OFFLINE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: feast-offline-store
                  key: password
          volumeMounts:
            - name: feast-rendered-config
              mountPath: /etc/feast
              readOnly: true
            - name: feast-registry
              mountPath: /data
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: feast-config-template
          configMap:
            name: feast-config
        - name: feast-rendered-config
          emptyDir: {}
        - name: feast-registry
          persistentVolumeClaim:
            claimName: feast-registry
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: feast-registry
  labels:
    app.kubernetes.io/name: feast-online
    app.kubernetes.io/component: feature-store
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
