apiVersion: apps/v1
kind: Deployment
metadata:
  name: kraken-ws-ingest
  labels:
    app: kraken-ws-ingest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kraken-ws-ingest
  template:
    metadata:
      labels:
        app: kraken-ws-ingest
    spec:
      containers:
        - name: kraken-ws-ingest
          image: ghcr.io/aether/kraken-ws-ingest:latest
          imagePullPolicy: IfNotPresent
          args:
            - "--pairs"
            - "XBT/USD,ETH/USD"
            - "--kafka-bootstrap"
            - "kafka:9092"
            - "--kafka-security-protocol"
            - "SSL"
            - "--kafka-ca-path"
            - "/etc/aether/tls/kafka/ca.crt"
            - "--trade-topic"
            - "md.trades"
            - "--book-topic"
            - "md.book"
            - "--metrics-port"
            - "$(METRICS_PORT)"
          env:
            - name: LOG_LEVEL
              value: INFO
            - name: METRICS_PORT
              value: "9000"
          ports:
            - name: metrics
              containerPort: 9000
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 500m
              memory: 512Mi
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pgrep -f kraken_ws_ingest || exit 1"
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pgrep -f kraken_ws_ingest || exit 1"
            initialDelaySeconds: 10
            periodSeconds: 30
          volumeMounts:
            - name: kafka-tls
              mountPath: /etc/aether/tls/kafka
              readOnly: true
      volumes:
        - name: kafka-tls
          secret:
            secretName: kafka-tls
