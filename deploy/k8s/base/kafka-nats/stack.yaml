apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      serviceAccountName: streaming-services
      volumes:
        - name: kafka-tls
          secret:
            secretName: kafka-tls
      containers:
        - name: kafka
          image: bitnami/kafka:3.7.0
          ports:
            - containerPort: 9092
              name: client
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_CFG_LISTENERS
              value: SSL://:9092
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: SSL://kafka:9092
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: SSL:SSL
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: SSL
            - name: KAFKA_TLS_TYPE
              value: PEM
            - name: KAFKA_TLS_CERTIFICATE_FILE
              value: /opt/bitnami/kafka/config/tls/tls.crt
            - name: KAFKA_TLS_KEY_FILE
              value: /opt/bitnami/kafka/config/tls/tls.key
            - name: KAFKA_TLS_CA_CERT_FILE
              value: /opt/bitnami/kafka/config/tls/ca.crt
            - name: KAFKA_TLS_CLIENT_AUTH
              value: none
            - name: KAFKA_ZOOKEEPER_PROTOCOL
              value: SASL
            - name: KAFKA_ZOOKEEPER_USER
              valueFrom:
                secretKeyRef:
                  name: zookeeper-credentials
                  key: kafka_user
            - name: KAFKA_ZOOKEEPER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zookeeper-credentials
                  key: kafka_password
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 2
              memory: 4Gi
          readinessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            tcpSocket:
              port: client
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
            - name: kafka-tls
              mountPath: /opt/bitnami/kafka/config/tls
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 200Gi
        storageClassName: fast
---
apiVersion: v1
kind: Service
metadata:
  name: bootstrap.kafka
spec:
  clusterIP: None
  selector:
    app: kafka
  ports:
    - name: client
      port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      serviceAccountName: streaming-services
      containers:
        - name: nats
          image: nats:2.10.9-alpine
          args:
            - -DV
            - -js
          ports:
            - containerPort: 4222
              name: client
            - containerPort: 8222
              name: monitoring
          readinessProbe:
            httpGet:
              path: /varz
              port: monitoring
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 6
          livenessProbe:
            httpGet:
              path: /healthz
              port: monitoring
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 200m
              memory: 256Mi
            limits:
              cpu: 1
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: data
              mountPath: /data
      volumes:
        - name: data
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  type: ClusterIP
  selector:
    app: nats
  ports:
    - name: client
      port: 4222
      targetPort: 4222
    - name: monitoring
      port: 8222
      targetPort: 8222
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: zookeeper
  replicas: 3
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      serviceAccountName: streaming-services
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:3.9.1
          ports:
            - containerPort: 2181
          env:
            - name: ZOO_ENABLE_AUTH
              value: "yes"
            - name: ZOO_CLIENT_USER
              valueFrom:
                secretKeyRef:
                  name: zookeeper-credentials
                  key: client_user
            - name: ZOO_CLIENT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: zookeeper-credentials
                  key: client_password
            - name: ZOO_SERVER_USERS
              valueFrom:
                secretKeyRef:
                  name: zookeeper-credentials
                  key: server_users
            - name: ZOO_SERVER_PASSWORDS
              valueFrom:
                secretKeyRef:
                  name: zookeeper-credentials
                  key: server_passwords
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: data
              mountPath: /bitnami/zookeeper
          readinessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 50Gi
        storageClassName: fast
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  clusterIP: None
  selector:
    app: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
      name: client
