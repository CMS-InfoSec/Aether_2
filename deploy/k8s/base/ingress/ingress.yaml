apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:

  name: aether-risk
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    # Ensure upstream services see the original TLS scheme via X-Forwarded-Proto.
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-max-age: "31536000"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "true"
    nginx.ingress.kubernetes.io/hsts-preload: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: risk.aether.example.com
      http:
        paths:
          - path: /api(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: risk-api
                port:
                  number: 80
          - path: /ingestor(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: marketdata-ingestor
                port:
                  number: 80
  tls:
    - hosts:
        - risk.aether.example.com
      secretName: aether-risk-tls

