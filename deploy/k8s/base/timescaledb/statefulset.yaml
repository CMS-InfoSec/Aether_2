apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: timescaledb
  labels:
    app.kubernetes.io/name: timescaledb
    app.kubernetes.io/component: database
spec:
  serviceName: timescaledb
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: timescaledb
  template:
    metadata:
      labels:
        app.kubernetes.io/name: timescaledb
    spec:
      containers:
        - name: timescaledb
          image: timescale/timescaledb-ha:pg15.3
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: timescaledb-credentials
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: timescaledb-credentials
                  key: password
            - name: POSTGRES_DB
              value: marketdata
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pg_isready -U \"${POSTGRES_USER}\" -d \"${POSTGRES_DB}\" -h 127.0.0.1"
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "pg_isready -U \"${POSTGRES_USER}\" -d \"${POSTGRES_DB}\" -h 127.0.0.1"
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
            limits:
              cpu: 1
              memory: 2Gi
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      securityContext:
        fsGroup: 999
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: standard
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: timescaledb-backup
  labels:
    app.kubernetes.io/name: timescaledb
    app.kubernetes.io/component: database
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 100Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: timescaledb-pgdump
  labels:
    app.kubernetes.io/name: timescaledb
    app.kubernetes.io/component: database
spec:
  schedule: "0 2 * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
            - name: pgdump
              image: timescale/timescaledb-ha:pg15.3
              imagePullPolicy: IfNotPresent
              env:
                - name: PGHOST
                  value: timescaledb
                - name: PGPORT
                  value: "5432"
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      name: timescaledb-credentials
                      key: username
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      name: timescaledb-credentials
                      key: username
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: timescaledb-credentials
                      key: password
              command:
                - /bin/bash
                - -c
                - |
                  set -euo pipefail
                  BACKUP_FILE="/backups/timescaledb-$(date +%Y%m%d%H%M%S).sql.gz"
                  export PGPASSWORD
                  pg_dumpall -h "$PGHOST" -p "$PGPORT" -U "$POSTGRES_USER" | gzip > "$BACKUP_FILE"
              volumeMounts:
                - name: backup-storage
                  mountPath: /backups
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: timescaledb-backup
