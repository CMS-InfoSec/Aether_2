apiVersion: apps/v1
kind: Deployment
metadata:
  name: oms-service
  labels:
    app: oms-service
    app.kubernetes.io/name: oms-service
    app.kubernetes.io/component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oms-service
  template:
    metadata:
      labels:
        app: oms-service
        app.kubernetes.io/name: oms-service
        app.kubernetes.io/component: api
      annotations:
        checksum/kraken-secrets: "$(KRAKEN_SECRET_HASH)"
        prometheus.io/path: /metrics
        prometheus.io/port: "http"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: oms-service
          image: ghcr.io/aether/oms-service@sha256:257a808c4abc954e0b4c364b7b0950dd33d5a3565aa6d85bf8d032c16fa722be
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: KRAKEN_SECRETS_BASE
              value: /var/run/secrets/kraken
            - name: AETHER_COMPANY_KRAKEN_SECRET_PATH
              value: /var/run/secrets/kraken/company/credentials.json
            - name: AETHER_DIRECTOR_1_KRAKEN_SECRET_PATH
              value: /var/run/secrets/kraken/director-1/credentials.json
            - name: AETHER_DIRECTOR_2_KRAKEN_SECRET_PATH
              value: /var/run/secrets/kraken/director-2/credentials.json
            - name: SESSION_REDIS_URL
              value: redis://redis:6379/0
            - name: SIM_MODE_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: sim-mode-database
                  key: dsn
            - name: SIM_MODE_DB_SSLMODE
              valueFrom:
                secretKeyRef:
                  name: sim-mode-database
                  key: sslmode
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              cpu: 200m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1Gi
          volumeMounts:
            - name: kraken-credentials
              mountPath: /var/run/secrets/kraken
              readOnly: true
            - name: tmp
              mountPath: /tmp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: kraken-credentials
          projected:
            defaultMode: 0440
            sources:
              - secret:
                  name: kraken-keys-company
                  items:
                    - key: credentials.json
                      path: company/credentials.json
                  optional: true
              - secret:
                  name: kraken-keys-director-1
                  items:
                    - key: credentials.json
                      path: director-1/credentials.json
                  optional: true
              - secret:
                  name: kraken-keys-director-2
                  items:
                    - key: credentials.json
                      path: director-2/credentials.json
                  optional: true
        - name: tmp
          emptyDir: {}
