apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-service
  labels:
    app: config-service
    app.kubernetes.io/name: config-service
    app.kubernetes.io/component: api
spec:
  replicas: 2
  selector:
    matchLabels:
      app: config-service
  template:
    metadata:
      labels:
        app: config-service
        app.kubernetes.io/name: config-service
        app.kubernetes.io/component: api
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "http"
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: config-service
          image: ghcr.io/aether/config-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
              name: http
          env:
            - name: CONFIG_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: config-service-database
                  key: dsn
            - name: CONFIG_DB_SSLMODE
              value: require
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
      volumes:
        - name: tmp
          emptyDir: {}
