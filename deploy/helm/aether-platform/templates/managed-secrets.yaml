{{- $managed := .Values.managedSecrets | default (dict) -}}
{{- if and ($managed.enabled | default true) ($managed.secrets) }}
{{- range $name, $secret := $managed.secrets }}
{{- if $secret.enabled | default true }}
{{- $labels := dict "name" $name "Release" $.Release -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $name }}
  labels:
    {{- include "aether-platform.labels" $labels | nindent 4 }}
  {{- if eq ($secret.type | default "opaque") "postgresDsn" }}
  annotations:
    aether.io/managed-by: aether-platform-chart
  {{- end }}
type: Opaque
stringData:
  {{- $type := $secret.type | default "opaque" -}}
  {{- if eq $type "postgresDsn" }}
  {{- $ctx := dict "Values" $.Values "Release" $.Release "Chart" $.Chart "connection" $secret.connection "name" $name -}}
  {{- $dsn := include "aether-platform.postgresqlDsn" $ctx -}}
  {{ $secret.dsnKey | default "dsn" }}: {{ $dsn | quote }}
  {{- $sslmode := $secret.connection.sslmode | default "require" -}}
  {{- if $sslmode }}
  {{ $secret.sslmodeKey | default "sslmode" }}: {{ $sslmode | quote }}
  {{- end }}
  {{- range $key, $value := $secret.additionalData | default (dict) }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- else if eq $type "opaque" }}
  {{- range $key, $value := $secret.data | default (dict) }}
  {{ $key }}: {{ $value | quote }}
  {{- end }}
  {{- else }}
  {{- fail (printf "unknown managed secret type %s for %s" $type $name) -}}
  {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
