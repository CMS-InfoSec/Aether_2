{{- $global := .Values.global -}}
{{- range $svcName, $svc := .Values.backendServices }}
{{- if and $svc.enabled $svc.ingress.enabled }}
{{- $name := default (printf "%s-service" $svcName) $svc.nameOverride -}}
{{- $labels := dict "name" $name "Release" $.Release -}}
{{- $security := $global.ingressSecurity | default (dict) -}}
{{- $hsts := $security.hsts | default (dict) -}}
{{- $hstsEnabled := and $hsts ($hsts.enabled) -}}
{{- $hstsMaxAge := $hsts.maxAge | default 31536000 -}}
{{- $includeSubdomains := $hsts.includeSubdomains | default true -}}
{{- $preload := $hsts.preload | default true -}}
{{- $useGlobalSecurity := $svc.ingress.useGlobalSecurity | default true -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $name }}
  labels:
    {{- include "aether-platform.labels" $labels | nindent 4 }}
    app: {{ $name }}
  annotations:
    cert-manager.io/cluster-issuer: {{ $global.tls.issuer | quote }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    {{- if and $useGlobalSecurity (or (not (hasKey $security "enforceHttps")) ($security.enforceHttps)) }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    {{- end }}
    {{- if and $useGlobalSecurity $hstsEnabled }}
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-max-age: "{{ $hstsMaxAge }}"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "{{ ternary "true" "false" $includeSubdomains }}"
    nginx.ingress.kubernetes.io/hsts-preload: "{{ ternary "true" "false" $preload }}"
    {{- end }}
    {{- if and $useGlobalSecurity $security.headers }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {{- range $key, $value := $security.headers }}
      more_set_headers "{{ $key }}: {{ $value }}";
      {{- end }}
    {{- end }}
    {{- with $svc.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  ingressClassName: {{ $global.ingressClassName }}
  tls:
    - hosts:
        - {{ $svc.ingress.host }}
      secretName: {{ $svc.ingress.tlsSecret }}
  rules:
    - host: {{ $svc.ingress.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ $name }}
                port:
                  number: {{ $svc.service.port | default 80 }}
---
{{ end }}
{{- end }}
