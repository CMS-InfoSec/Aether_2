{{- $global := .Values.global -}}
{{- $promGlobal := $global.prometheus | default (dict) -}}
{{- $promDefaultEnabled := ternary $promGlobal.enabled true (hasKey $promGlobal "enabled") -}}
{{- $promDefaultPath := $promGlobal.path | default "/metrics" -}}
{{- $promDefaultPort := $promGlobal.port | default "http" -}}
{{- $promDefaultScheme := $promGlobal.scheme | default "http" -}}
{{- range $svcName, $svc := .Values.backendServices }}
{{- if $svc.enabled }}
{{- $name := default (printf "%s-service" $svcName) $svc.nameOverride -}}
{{- $labels := dict "name" $name "Release" $.Release -}}
{{- $hasKraken := and $global.krakenSecrets.enabled $svc.usesKrakenSecrets -}}
{{- $svcProm := $svc.prometheus | default (dict) -}}
{{- $promEnabled := ternary $svcProm.enabled $promDefaultEnabled (hasKey $svcProm "enabled") -}}
{{- $promPath := $svcProm.path | default $promDefaultPath -}}
{{- $promPort := $svcProm.port | default $promDefaultPort -}}
{{- $promScheme := $svcProm.scheme | default $promDefaultScheme -}}
{{- $krakenAccounts := $global.krakenSecrets.accounts | default (list) -}}
{{- $annotations := dict -}}
{{- if $hasKraken }}
{{- $_ := set $annotations $global.krakenSecrets.annotationKey (default "" $global.krakenSecrets.checksum) -}}
{{- end }}
{{- if and $promEnabled (ne $promEnabled false) }}
{{- $_ := set $annotations "prometheus.io/scrape" "true" -}}
{{- $_ := set $annotations "prometheus.io/path" $promPath -}}
{{- $_ := set $annotations "prometheus.io/port" (printf "%v" $promPort) -}}
{{- $_ := set $annotations "prometheus.io/scheme" $promScheme -}}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  labels:
    {{- include "aether-platform.labels" $labels | nindent 4 }}
    app: {{ $name }}
spec:
  replicas: {{ $svc.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "aether-platform.selectorLabels" (dict "name" $name) | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "aether-platform.selectorLabels" (dict "name" $name) | nindent 8 }}
        {{- include "aether-platform.labels" $labels | nindent 8 }}
      {{- if gt (len $annotations) 0 }}
      annotations:
        {{- range $key, $value := $annotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      securityContext:
        {{- toYaml $global.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ $name }}
          image: {{ include "aether-platform.image" $svc.image }}
          imagePullPolicy: {{ $global.imagePullPolicy }}
          ports:
            - containerPort: {{ $svc.containerPort | default 8000 }}
              name: http
          {{- $extraEnv := $svc.env | default (list) -}}
          {{- $sessionRedis := default "" $global.sessionStore.redisUrl -}}
          {{- $releaseManifest := $global.releaseManifest | default (dict) -}}
          {{- $releaseManifestEnabled := and ($releaseManifest.enabled | default false) $releaseManifest.databaseSecretName -}}
          {{- $envEnabled := or $hasKraken (gt (len $extraEnv) 0) (ne $sessionRedis "") $releaseManifestEnabled -}}
          {{- if $envEnabled }}
          env:
            {{- if $hasKraken }}
            - name: KRAKEN_SECRETS_BASE
              value: {{ $global.krakenSecrets.basePath | quote }}
            {{- range $account := $krakenAccounts }}
            - name: {{ $account.envVar }}
              value: {{ printf "%s/%s/credentials.json" $global.krakenSecrets.basePath $account.mountSubPath | quote }}
            {{- end }}
            {{- end }}
            {{- if $sessionRedis }}
            - name: SESSION_REDIS_URL
              value: {{ $sessionRedis | quote }}
            {{- end }}
            {{- if $releaseManifestEnabled }}
            - name: RELEASE_MANIFEST_DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ $releaseManifest.databaseSecretName }}
                  key: {{ $releaseManifest.databaseSecretKey | default "dsn" }}
            {{- if $releaseManifest.sslmode }}
            - name: RELEASE_MANIFEST_SSLMODE
              value: {{ $releaseManifest.sslmode | quote }}
            {{- end }}
            {{- if $releaseManifest.appName }}
            - name: RELEASE_MANIFEST_APP_NAME
              value: {{ $releaseManifest.appName | quote }}
            {{- end }}
            {{- end }}
            {{- range $extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- $readiness := $global.probes.readiness -}}
          readinessProbe:
            {{- toYaml $readiness | nindent 12 }}
          {{- $liveness := $global.probes.liveness -}}
          livenessProbe:
            {{- toYaml $liveness | nindent 12 }}
          resources:
            {{- toYaml $svc.resources | nindent 12 }}
          securityContext:
            {{- toYaml $global.containerSecurityContext | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            {{- if $hasKraken }}
            - name: kraken-credentials
              mountPath: {{ $global.krakenSecrets.basePath | quote }}
              readOnly: true
            {{- end }}
            {{- range $svc.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        {{- if $hasKraken }}
        - name: kraken-credentials
          projected:
            defaultMode: 0440
            sources:
              {{- range $account := $krakenAccounts }}
              {{- $optional := ternary $account.optional true (hasKey $account "optional") -}}
              - secret:
                  name: {{ $account.secretName }}
                  items:
                    - key: credentials.json
                      path: {{ printf "%s/credentials.json" $account.mountSubPath }}
                  optional: {{ $optional }}
              {{- end }}
        {{- end }}
        {{- range $svc.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
---
{{- end }}
