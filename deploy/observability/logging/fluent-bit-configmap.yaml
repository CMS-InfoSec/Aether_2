apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: observability
  labels:
    app.kubernetes.io/name: fluent-bit
    app.kubernetes.io/component: logging
    app.kubernetes.io/part-of: aether-observability
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush        1
        Daemon       Off
        Log_Level    info
        Parsers_File parsers.conf
        HTTP_Server  On
        HTTP_Listen  0.0.0.0
        HTTP_Port    2020
        storage.path /var/log/fluent-bit-buffers/
        storage.sync normal
        storage.checksum on
        storage.backlog.mem_limit 50M

    [INPUT]
        Name              tail
        Tag               kube.*
        Path              /var/log/containers/*.log
        Exclude_Path      /var/log/containers/*fluent-bit*.log
        Parser            cri
        DB                /var/fluent-bit/state/flb_kube.db
        Mem_Buf_Limit     20MB
        Skip_Long_Lines   On
        Refresh_Interval  5
        Rotate_Wait       10
        storage.type      filesystem

    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Keep_Log            Off
        K8S-Logging.Parser  On
        K8S-Logging.Exclude On
        Labels              Off
        Annotations         Off

    [OUTPUT]
        Name              loki
        Match             kube.*
        Host              loki
        Port              3100
        Labels            job=aether-platform,namespace=$kubernetes['namespace_name'],pod=$kubernetes['pod_name'],container=$kubernetes['container_name']
        RemoveKeys        stream,time
        Line_Format       json
        Log_Level         info
        Workers           2

    [OUTPUT]
        Name              http
        Match             kube.*
        Host              ${SIEM_HOST}
        Port              ${SIEM_PORT}
        URI               ${SIEM_ENDPOINT}
        Format            json
        Header            Authorization Bearer ${SIEM_TOKEN}
        Header            X-Retention-Days ${SIEM_RETENTION_DAYS}
        tls               On
        tls.verify        On
        Retry_Limit       False
        Workers           2
  parsers.conf: |
    [PARSER]
        Name   cri
        Format regex
        Regex  ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<flags>[^ ]*) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
