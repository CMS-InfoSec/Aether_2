name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  verify:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir '.[dev,test]'

      - name: Ensure container tags are immutable
        run: |
          search_paths=(deploy/k8s argo kubernetes)
          existing_paths=()
          for path in "${search_paths[@]}"; do
            if [ -e "$path" ]; then
              existing_paths+=("$path")
            fi
          done

          if [ "${#existing_paths[@]}" -gt 0 ] && \
             grep -R ":latest" "${existing_paths[@]}" --include='*.yaml' --include='*.yml' --include='*.json'; then
            echo 'Found mutable :latest tag references. Pin all container images to immutable tags or digests.' >&2
            exit 1
          fi

      - name: Lint for unused imports and insecure defaults
        run: |
          ruff check . --select F401,F402,F403,F404,F405,F406,F407,F601,F602 --exclude tests
          python scripts/lint_insecure_defaults.py

      - name: Run pytest (full stack, fail on warnings/skips)
        env:
          PYTHONWARNINGS: error
        run: |
          pytest --maxfail=1 --strict-markers --strict-config --runxfail --junitxml=pytest-report.xml
          python scripts/ensure_no_skips.py pytest-report.xml

      - name: Enforce spot-only compliance exporter
        env:
          PYTHONWARNINGS: error
        run: |
          pytest tests/test_compliance_pack.py -k "spot" --maxfail=1 --strict-markers --strict-config --runxfail

      - name: Build risk API Docker image
        run: |
          docker build -t risk-api:ci -f deploy/docker/risk-api/Dockerfile .

      - name: Run /healthz check
        run: |
          docker run -d --rm -p 8000:8000 --name risk-api-ci risk-api:ci
          for attempt in {1..10}; do
            sleep 6
            if curl -fsS http://127.0.0.1:8000/healthz; then
              docker stop risk-api-ci
              exit 0
            fi
          done
          echo "Health check failed; dumping logs"
          docker logs risk-api-ci || true
          docker stop risk-api-ci || true
          exit 1
