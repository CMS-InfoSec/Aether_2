name: Lint and Test

on:
  pull_request:
  push:
    branches:
      - main
      - kill-switch

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{
      github.event.workflow_run && github.event.workflow_run.pull_requests && github.event.workflow_run.pull_requests[0]
        && github.event.workflow_run.pull_requests[0].number
      || github.event.workflow_run && github.event.workflow_run.head_branch && github.event.workflow_run.head_branch != ''
        && github.event.workflow_run.head_branch
      || github.event.pull_request && github.event.pull_request.number
      || github.head_ref && github.head_ref != '' && github.head_ref
      || github.ref
      || github.event.workflow_run && github.event.workflow_run.id
      || github.run_id
    }}
  cancel-in-progress: true




jobs:
  actionlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install actionlint
        env:
          ACTIONLINT_VERSION: v1.7.8
        run: |
          set -euo pipefail
          archive="actionlint_${ACTIONLINT_VERSION#v}_linux_amd64.tar.gz"
          checksum_file="actionlint_${ACTIONLINT_VERSION#v}_checksums.txt"
          base_url="https://github.com/rhysd/actionlint/releases/download/${ACTIONLINT_VERSION}"
          curl --fail --show-error --silent --location --retry 5 --retry-delay 2 --retry-all-errors \
            -o "${archive}" "${base_url}/${archive}"
          curl --fail --show-error --silent --location --retry 5 --retry-delay 2 --retry-all-errors \
            -o "${checksum_file}" "${base_url}/${checksum_file}"
          expected_sum="$(grep " ${archive}$" "${checksum_file}" | awk '{print $1}')"
          if [ -z "${expected_sum}" ]; then
            echo "Unable to determine checksum for ${archive}" >&2
            exit 1
          fi
          echo "${expected_sum}  ${archive}" | sha256sum --check --status
          tar -xzf "${archive}" actionlint
          sudo install -m 0755 actionlint /usr/local/bin/actionlint
          rm -f "${archive}" "${checksum_file}" actionlint
          actionlint --version
      - name: Run actionlint
        run: actionlint -color

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install tooling
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          python -m pip install yamllint==1.33.0
      - name: YAML lint
        run: |
          yamllint deploy .github/workflows
  kustomize-builds:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install kustomize
        env:
          KUSTOMIZE_VERSION: 5.3.0
        run: |
          set -euo pipefail
          tmpdir="$(mktemp -d)"
          archive="kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz"
          base_url="https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE_VERSION}"
          curl --fail --show-error --silent --location --retry 5 --retry-delay 2 --retry-all-errors \
            -o "${tmpdir}/${archive}" "${base_url}/${archive}"
          curl --fail --show-error --silent --location --retry 5 --retry-delay 2 --retry-all-errors \
            -o "${tmpdir}/checksums.txt" "${base_url}/kustomize_v${KUSTOMIZE_VERSION}_checksums.txt"
          (cd "${tmpdir}" && grep "${archive}" checksums.txt | sha256sum -c -)
          tar -xzf "${tmpdir}/${archive}" -C "${tmpdir}"
          sudo install -m 0755 "${tmpdir}/kustomize" /usr/local/bin/kustomize
          rm -rf "${tmpdir}"
          kustomize version
      - name: Validate base manifests
        run: kustomize build deploy/k8s/base
      - name: Validate staging overlay
        run: kustomize build deploy/k8s/overlays/staging
      - name: Validate production overlay
        run: kustomize build deploy/k8s/overlays/production
      - name: Validate observability stack
        run: kustomize build deploy/observability
  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: azure/setup-helm@v4
        with:
          version: v3.13.3
      - name: Lint Helm charts
        run: |
          helm lint deploy/helm/aether-platform --strict
