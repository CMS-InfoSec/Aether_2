name: Nightly Production Readiness Audits

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: write

env:
  PIP_AUDIT_VERSION: 2.9.0
  PIP_VERSION: 24.3.1

concurrency:
  group: >-
    ${{ github.workflow }}-${{
      github.event.workflow_run && github.event.workflow_run.pull_requests && github.event.workflow_run.pull_requests[0]
        && github.event.workflow_run.pull_requests[0].number
      || (
        github.event.workflow_run
        && (
          github.event.workflow_run.head_repository
          && github.event.workflow_run.head_repository.full_name
          && github.event.workflow_run.head_repository.full_name != ''
          && format(
            '{0}:{1}',
            github.event.workflow_run.head_repository.full_name,
            (
              github.event.workflow_run.head_branch
              && github.event.workflow_run.head_branch != ''
              && github.event.workflow_run.head_branch
            )
            || github.event.workflow_run.run_number
            || github.event.workflow_run.id
            || github.run_id
          )
          || (
            github.event.workflow_run.repository
            && github.event.workflow_run.repository.full_name
            && github.event.workflow_run.repository.full_name != ''
            && format(
              '{0}:{1}',
              github.event.workflow_run.repository.full_name,
              (
                github.event.workflow_run.head_branch
                && github.event.workflow_run.head_branch != ''
                && github.event.workflow_run.head_branch
              )
              || github.event.workflow_run.run_number
              || github.event.workflow_run.id
              || github.run_id
            )
          )
          || (
            github.event.workflow_run.head_branch
            && github.event.workflow_run.head_branch != ''
            && github.event.workflow_run.head_branch
          )
        )
      )
      || github.event.pull_request && github.event.pull_request.number
      || github.head_ref && github.head_ref != '' && github.head_ref
      || github.ref
      || github.event.workflow_run && github.event.workflow_run.run_number
      || github.event.workflow_run && github.event.workflow_run.id
      || github.run_id
    }}
  cancel-in-progress: true




jobs:
  run-audits:
    name: Execute production readiness audits
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
          key: >-
            pip-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-${{
              hashFiles(
                '**/requirements.txt',
                '**/requirements-ci.txt',
                'pyproject.toml',
                'poetry.lock'
              )
            }}
          restore-keys: |
            pip-${{ runner.os }}-py${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -m pip install --upgrade "pip==${PIP_VERSION}"
          if [ -f requirements.txt ]; then python -m pip install -r requirements.txt; fi
          if [ -f pyproject.toml ]; then python -m pip install '.[dev,test]'; fi
          python -m pip install "pip-audit==${PIP_AUDIT_VERSION}"

      - name: Run audits and update documentation
        env:
          GIT_AUTHOR_NAME: Codex Audit Bot
          GIT_AUTHOR_EMAIL: codex-audit-bot@example.com
        run: |
          python ./.codex/audit_and_update.py
