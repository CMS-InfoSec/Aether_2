name: OCI Build Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'deploy/docker/**'
      - '.github/workflows/oci-build.yml'

env:
  REGISTRY: ghcr.io/aether

permissions:
  contents: read
  packages: write

jobs:
  kaniko:
    name: Kaniko Build
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.guard.outputs.should_build }}
    steps:
      - uses: actions/checkout@v4

      - name: Check required Dockerfiles
        id: guard
        run: |
          if [ -f deploy/docker/kraken-ws-ingest/Dockerfile ] && [ -f deploy/docker/risk-api/Dockerfile ]; then
            echo "should_build=true" >> "$GITHUB_OUTPUT"
          else
            echo "should_build=false" >> "$GITHUB_OUTPUT"
            echo "Required Dockerfiles not found. Skipping Kaniko build stage."
          fi

      - name: Log in to GHCR
        if: steps.guard.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Kraken WS Ingest image
        if: steps.guard.outputs.should_build == 'true'
        uses: int128/kaniko-action@v1.52.0
        with:
          context: .
          file: deploy/docker/kraken-ws-ingest/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/kraken-ws-ingest:${{ github.sha }}
          kaniko-args: |
            --snapshotMode=time
            --single-snapshot
      - name: Build Risk API image
        if: steps.guard.outputs.should_build == 'true'
        uses: int128/kaniko-action@v1.52.0
        with:
          context: .
          file: deploy/docker/risk-api/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/risk-api:${{ github.sha }}
          kaniko-args: |
            --snapshotMode=time
            --single-snapshot
  buildah:
    name: Buildah Build
    runs-on: ubuntu-latest
    needs: kaniko
    if: ${{ needs.kaniko.outputs.should_build == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Buildah
        run: sudo apt-get update && sudo apt-get install -y buildah
      - name: Build Kraken WS Ingest image
        run: |
          buildah bud --layers -f deploy/docker/kraken-ws-ingest/Dockerfile -t ${REGISTRY}/kraken-ws-ingest:${{ github.sha }} .
      - name: Build Risk API image
        run: |
          buildah bud --layers -f deploy/docker/risk-api/Dockerfile -t ${REGISTRY}/risk-api:${{ github.sha }} .
      - name: Push images
        env:
          CR_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "$CR_PAT" ]; then
            echo "::add-mask::$CR_PAT"
          fi
          echo "${CR_PAT}" | buildah login --username ${{ github.actor }} --password-stdin ghcr.io
          buildah push ${REGISTRY}/kraken-ws-ingest:${{ github.sha }}
          buildah push ${REGISTRY}/risk-api:${{ github.sha }}
