name: Monthly Secrets Service Key Rotation

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  rotate-staging:
    name: Rotate staging key
    runs-on: ubuntu-latest
    outputs:
      secret_key: ${{ steps.generate.outputs.secret_key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate encryption key
        id: generate
        run: |
          set -euo pipefail
          KEY="$(openssl rand -base64 32)"
          echo "::add-mask::$KEY"
          echo "secret_key=$KEY" >> "$GITHUB_OUTPUT"

      - name: Authenticate to Vault
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_SECRETS_SERVICE_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRETS_SERVICE_SECRET_ID }}
          exportToken: true

      - name: Update Secrets Service key in Vault
        env:
          SECRET_KEY: ${{ steps.generate.outputs.secret_key }}
        run: |
          set -euo pipefail
          vault kv put secret/aether/secrets-service \
            SECRET_ENCRYPTION_KEY="$SECRET_KEY"

      - name: Configure kubectl for staging
        env:
          KUBECONFIG_STAGING: ${{ secrets.KUBECONFIG_STAGING }}
        run: |
          set -euo pipefail
          mkdir -p ~/.kube
          echo "$KUBECONFIG_STAGING" > ~/.kube/config
          chmod 0600 ~/.kube/config

      - name: Force ExternalSecret reconciliation (staging)
        run: |
          set -euo pipefail
          kubectl -n aether-services annotate externalsecret secrets-service-config \
            external-secrets.io/refresh-trigger="$(date +%s)" --overwrite
          kubectl -n aether-services rollout restart deployment/secrets-service
          kubectl -n aether-services rollout status deployment/secrets-service --timeout=5m

  rotate-production:
    name: Rotate production key
    runs-on: ubuntu-latest
    needs: rotate-staging
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mask rotated key
        run: echo "::add-mask::${{ needs.rotate-staging.outputs.secret_key }}"

      - name: Authenticate to Vault
        uses: hashicorp/vault-action@v3
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_SECRETS_SERVICE_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRETS_SERVICE_SECRET_ID }}
          exportToken: true

      - name: Update Secrets Service key in Vault (production)
        env:
          SECRET_KEY: ${{ needs.rotate-staging.outputs.secret_key }}
        run: |
          set -euo pipefail
          vault kv put secret/aether/secrets-service \
            SECRET_ENCRYPTION_KEY="$SECRET_KEY"

      - name: Configure kubectl for production
        env:
          KUBECONFIG_PRODUCTION: ${{ secrets.KUBECONFIG_PRODUCTION }}
        run: |
          set -euo pipefail
          mkdir -p ~/.kube
          echo "$KUBECONFIG_PRODUCTION" > ~/.kube/config
          chmod 0600 ~/.kube/config

      - name: Force ExternalSecret reconciliation (production)
        run: |
          set -euo pipefail
          kubectl -n aether-services annotate externalsecret secrets-service-config \
            external-secrets.io/refresh-trigger="$(date +%s)" --overwrite
          kubectl -n aether-services rollout restart deployment/secrets-service
          kubectl -n aether-services rollout status deployment/secrets-service --timeout=5m
