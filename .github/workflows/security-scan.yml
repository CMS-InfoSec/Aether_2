name: Security Scans

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{
      github.event.workflow_run && github.event.workflow_run.pull_requests && github.event.workflow_run.pull_requests[0]
        && github.event.workflow_run.pull_requests[0].number
      || (
        github.event.workflow_run
        && (
          github.event.workflow_run.head_repository
          && github.event.workflow_run.head_repository.full_name
          && github.event.workflow_run.head_repository.full_name != ''
          && format(
            '{0}:{1}',
            github.event.workflow_run.head_repository.full_name,
            (
              github.event.workflow_run.head_branch
              && github.event.workflow_run.head_branch != ''
              && github.event.workflow_run.head_branch
            )
            || github.event.workflow_run.run_number
            || github.event.workflow_run.id
            || github.run_id
          )
          || (
            github.event.workflow_run.repository
            && github.event.workflow_run.repository.full_name
            && github.event.workflow_run.repository.full_name != ''
            && format(
              '{0}:{1}',
              github.event.workflow_run.repository.full_name,
              (
                github.event.workflow_run.head_branch
                && github.event.workflow_run.head_branch != ''
                && github.event.workflow_run.head_branch
              )
              || github.event.workflow_run.run_number
              || github.event.workflow_run.id
              || github.run_id
            )
          )
          || (
            github.event.workflow_run.head_branch
            && github.event.workflow_run.head_branch != ''
            && github.event.workflow_run.head_branch
          )
        )
      )
      || github.event.pull_request && github.event.pull_request.number
      || github.head_ref && github.head_ref != '' && github.head_ref
      || github.ref
      || github.event.workflow_run && github.event.workflow_run.run_number
      || github.event.workflow_run && github.event.workflow_run.id
      || github.run_id
    }}
  cancel-in-progress: true




jobs:
  trivy-config:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Run Trivy config scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: config
          format: table
          exit-code: '1'
          ignore-unfixed: true
          scan-ref: deploy
  trivy-repo:
    runs-on: ubuntu-latest
    needs: trivy-config
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Run Trivy FS scan
        uses: aquasecurity/trivy-action@0.33.1
        with:
          scan-type: fs
          format: table
          exit-code: '1'
          ignore-unfixed: true
          scan-ref: .
  kubesec:
    runs-on: ubuntu-latest
    needs: trivy-repo
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Install kube-score
        env:
          KUBE_SCORE_VERSION: v1.18.0
        run: |
          set -euo pipefail
          archive="kube-score_${KUBE_SCORE_VERSION#v}_linux_amd64.tar.gz"
          curl --fail --show-error --silent --location --retry 5 --retry-delay 2 --retry-all-errors \
            --proto '=https' --tlsv1.2 \
            -o "${archive}" "https://github.com/zegl/kube-score/releases/download/${KUBE_SCORE_VERSION}/${archive}"
          curl --fail --show-error --silent --location --retry 5 --retry-delay 2 --retry-all-errors \
            --proto '=https' --tlsv1.2 \
            -o checksums.txt "https://github.com/zegl/kube-score/releases/download/${KUBE_SCORE_VERSION}/checksums.txt"
          expected_sum="$(grep " ${archive}$" checksums.txt | awk '{print $1}')"
          if [ -z "${expected_sum}" ]; then
            echo "Unable to find checksum for ${archive}" >&2
            exit 1
          fi
          echo "${expected_sum}  ${archive}" | sha256sum --check --status
          tar -xzf "${archive}" kube-score
          sudo install -m 0755 kube-score /usr/local/bin/kube-score
          rm -f "${archive}" checksums.txt kube-score
          kube-score version
      - name: Score manifests
        run: |
          kube-score score deploy/k8s/base
