name: Build OCI Images

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'deploy/docker/risk-api/**'
      - 'deploy/docker/risk-ingestor/**'
      - 'deploy/docker/kraken-ws-ingest/**'
      - 'deploy/docker/**'
      - 'requirements.txt'
      - 'pyproject.toml'
      - 'poetry.lock'
      - 'services/**'
      - 'common/**'
      - 'src/**'

permissions:
  contents: read
  packages: write

jobs:
  kaniko-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Risk API Image
        uses: int128/kaniko-action@v1.52.0
        with:
          push: true
          context: .
          file: deploy/docker/risk-api/Dockerfile
          tags: |
            ghcr.io/aether/risk-api:${{ github.sha }}
      - name: Verify critical wheels in Risk API image
        run: |
          docker pull ghcr.io/aether/risk-api:${{ github.sha }}
          docker run --rm ghcr.io/aether/risk-api:${{ github.sha }} python - <<'PY'
import importlib
import json
import sys

modules = ["psycopg", "argon2", "cryptography"]
missing: dict[str, str] = {}
for name in modules:
    try:
        importlib.import_module(name)
    except Exception as exc:
        missing[name] = repr(exc)

if missing:
    payload = {
        "event": "missing_critical_modules",
        "modules": missing,
        "component": "risk-api-image",
    }
    sys.stderr.write(json.dumps(payload) + "\n")
    raise SystemExit(1)

print("Verified critical Python modules:", ", ".join(modules))
PY
      - name: Build Ingestor Image
        uses: int128/kaniko-action@v1.52.0
        with:
          push: true
          context: .
          file: deploy/docker/risk-ingestor/Dockerfile
          tags: |
            ghcr.io/aether/risk-ingestor:${{ github.sha }}
      - name: Verify critical wheels in Risk Ingestor image
        run: |
          docker pull ghcr.io/aether/risk-ingestor:${{ github.sha }}
          docker run --rm ghcr.io/aether/risk-ingestor:${{ github.sha }} python - <<'PY'
import importlib
import json
import sys

modules = ["psycopg", "argon2", "cryptography"]
missing: dict[str, str] = {}
for name in modules:
    try:
        importlib.import_module(name)
    except Exception as exc:
        missing[name] = repr(exc)

if missing:
    payload = {
        "event": "missing_critical_modules",
        "modules": missing,
        "component": "risk-ingestor-image",
    }
    sys.stderr.write(json.dumps(payload) + "\n")
    raise SystemExit(1)

print("Verified critical Python modules:", ", ".join(modules))
PY

      - name: Generate build metadata manifest
        run: |
          cat <<EOF > build-manifest.json
          {
            "commit_sha": "${{ github.sha }}",
            "build_timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "change_request_id": "${CHANGE_REQUEST_ID}",
            "compliance_labels": [
              "ISO27001",
              "GDPR"
            ]
          }
          EOF
        env:
          CHANGE_REQUEST_ID: ${{ github.event.pull_request.number || github.run_id }}

      - name: Upload build metadata manifest
        uses: actions/upload-artifact@v4
        with:
          name: build-manifest-${{ github.job }}
          path: build-manifest.json

  buildah-sbom:
    runs-on: ubuntu-latest
    needs: kaniko-build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Buildah
        run: |
          sudo apt-get update
          sudo apt-get install -y buildah

      - name: Download Syft
        uses: anchore/sbom-action/download-syft@v0.20.6
        with:
          syft-version: v1.33.0
      - name: Build Risk API with Buildah
        run: |
          buildah bud -f deploy/docker/risk-api/Dockerfile -t ghcr.io/aether/risk-api:${{ github.sha }} .
      - name: Build Ingestor with Buildah
        run: |
          buildah bud -f deploy/docker/risk-ingestor/Dockerfile -t ghcr.io/aether/risk-ingestor:${{ github.sha }} .
      - name: Generate SBOMs
        run: |
          syft ghcr.io/aether/risk-api:${{ github.sha }} -o json > sbom-risk-api.json
          syft ghcr.io/aether/risk-ingestor:${{ github.sha }} -o json > sbom-risk-ingestor.json
      - name: Upload SBOMs
        uses: actions/upload-artifact@v4
        with:
          name: sboms
          path: |
            sbom-risk-api.json
            sbom-risk-ingestor.json

      - name: Generate build metadata manifest
        run: |
          cat <<EOF > build-manifest.json
          {
            "commit_sha": "${{ github.sha }}",
            "build_timestamp": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "change_request_id": "${CHANGE_REQUEST_ID}",
            "compliance_labels": [
              "ISO27001",
              "GDPR"
            ]
          }
          EOF
        env:
          CHANGE_REQUEST_ID: ${{ github.event.pull_request.number || github.run_id }}

      - name: Upload build metadata manifest
        uses: actions/upload-artifact@v4
        with:
          name: build-manifest-${{ github.job }}
          path: build-manifest.json
