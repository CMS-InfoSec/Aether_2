[build-system]
requires = ["setuptools>=64", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aether"
version = "0.1.0"
description = "Admin authentication and accounts services"
authors = [{name = "Aether", email = "admin@example.com"}]
requires-python = ">=3.11,<3.14"
dependencies = [
    "aiohttp==3.12.15",
    "fastapi==0.118.0",
    "uvicorn[standard]==0.34.0",
    "pydantic==2.10.6",
    "boto3==1.40.45",
    "alembic==1.16.5",
    "sqlalchemy==2.0.44",
    # Standardise on psycopg v3 binary distribution.
    "psycopg[binary]==3.2.10",
    "asyncpg==0.30.0",
    "timescale-vector==0.0.7",
    "aiokafka==0.12.0",
    "nats-py==2.11.0",
    "redis==5.0.4",
    "kubernetes==32.0.0",
    "confluent-kafka==2.6.0",
    "opentelemetry-api==1.37.0",
    "opentelemetry-sdk==1.37.0",
    "opentelemetry-exporter-jaeger-thrift==1.27.0",
    "feast==0.54.0",
    "mlflow==3.4.0",
    "scikit-learn==1.5.2",
    "torch==2.8.0",
    "pyotp==2.9.0",
    "email-validator==2.3.0",
    "prometheus-client==0.23.1",
    "networkx==3.5",
    "argon2-cffi==23.1.0",
    "passlib[argon2]==1.7.4",
    "httpx==0.28.1",
    "requests==2.32.5",
    "websockets==15.0.1",
    "pyyaml==6.0.3",
    "certifi==2024.12.14",
    "dask==2024.12.1",
    "distributed==2024.12.1",
    "fsspec==2024.12.0",
    "jsonschema-specifications==2024.10.1",
    "pytz==2024.2",
    "tzdata==2024.2",
    "pandas==2.2.3",
    "numpy==2.1.3",
    "reportlab==4.4.4",
    "markdown2==2.5.4",
    "cryptography==45.0.7",
    "great-expectations==1.7.0",
    "lightgbm==4.6.0",
    "optuna==4.1.0",
    "stable-baselines3==2.7.0",
    "transformers==4.57.0",
    "typing-extensions==4.15.0",
    "xgboost==3.0.5",
]

[project.optional-dependencies]
test = [
    "aiohttp==3.12.15",
    "cryptography==45.0.7",
    "gevent==24.2.1",
    "httpx==0.28.1",
    "locust==2.32.2",
    "prometheus-client==0.23.1",
    "pytest==8.4.2",
    "pytest-benchmark==5.1.0",
    "pytest-asyncio==0.24.0",
    "requests==2.32.5",
    "websockets==15.0.1",
]
dev = [
    "black==25.9.0",
    "isort==6.1.0",
    "mypy==1.18.2",
    "ruff==0.13.3",
    "coverage[toml]==7.6.10",
]

[tool.setuptools]
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = [".", "src"]
include = [
    "aether*",
    "services*",
    "shared*",
    "common*",
]
exclude = [
    "tests*",
    "docs*",
    "deploy*",
    "frontend*",
    "argo*",
    "pipelines*",
]
namespaces = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra"
testpaths = ["tests"]
asyncio_mode = "auto"

markers = [
    "unit: unit test suite",
    "integration: integration test suite",
    "slow: end-to-end trading pipeline checks",
    "smoke: smoke tests covering service persistence and deployment wiring",
]

[tool.ruff]
target-version = "py311"
line-length = 120
src = [
    ".",
]
extend-exclude = [
    "tests",
    "docs",
    "deploy",
    "frontend",
    "argo",
    "pipelines",
]

[tool.ruff.lint]
select = ["E402", "F401", "F402", "F811", "F841"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["E402"]

[tool.mypy]
files = [
    "app.py",
    "auth",
    "metrics.py",
    "pg_session.py",
    "shared",
    "training_service.py",
]
exclude = [
    "data/migrations/env.py",
    "data/alembic/env.py",
    "data/.*",
    "common/utils/.*",
    "common/schemas/.*",
    "docs/.*",
    "ml/.*",
    "ops/.*",
    "services/backtest/.*",
    "release_manifest.py",
    "tests/.*",
]
ignore_missing_imports = true
follow_imports = "skip"

[tool.coverage.run]
branch = true
source = [
    "app",
    "auth",
    "metrics",
    "pg_session",
    "services",
    "shared",
    "aether",
]
omit = [
    "tests/*",
    "*/tests/*",
    "deploy/*",
    "frontend/*",
    "docs/*",
]

[tool.coverage.report]
skip_empty = true

