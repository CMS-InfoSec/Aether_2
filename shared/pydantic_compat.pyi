from typing import Any, Callable, Dict

class BaseModel:
    model_config: Dict[str, Any]

    def __init__(self, **data: Any) -> None: ...

    def dict(self, *args: Any, **kwargs: Any) -> Dict[str, Any]: ...

    def model_dump(self, *args: Any, **kwargs: Any) -> Dict[str, Any]: ...


def Field(default: Any = ..., **kwargs: Any) -> Any: ...

def field_validator(*fields: str, **kwargs: Any) -> Callable[[Callable[..., Any]], Callable[..., Any]]: ...

def model_validator(*, mode: str | None = ...) -> Callable[[Callable[..., Any]], Callable[..., Any]]: ...

def model_serializer(*, mode: str | None = ...) -> Callable[[Callable[..., Any]], Callable[..., Any]]: ...

ConfigDict = Dict[str, Any]
